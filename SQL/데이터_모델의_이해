# **1. 모델링의 이해**

## **가. 모델링의 정의**

모델 : 모형(模型), 축소형(縮小型)의 의미로서 사람이 살아가면서 나타날 수 있는 다양한 현상에 대해서 일정한 표기법에 의해 표현해 놓은 모형 ⇒ 커뮤니케이션의 효율성을 극대화한 고급화된 표현방법
모델링 : 표기법에 의해 규칙을 가지고 표기하는 것. 즉, 모델을 만들어가는 일 자체

## **나. 모델링의 특징**

1) 추상화(모형화, 가설적) : 현실세계를 일정한 형식에 맞추어 표현을 한다는 의미. 즉, 다양한 현상을 일정한 양식인 표기법에 의해 표현
2) 단순화 : 복잡한 현실세계를 약속된 규약에 의해 제한된 표기법이나 언어로 표현하여 쉽게 이해할 수 있도록 하는 개념
3) 명확화 : 누구나 이해하기 쉽게 하기 위해 대상에 대한 애매모호함을 제거하고 정확(正確)하게 현상을 기술하는 것

  ※ 정보시스템 구축에서 모델링 활용

    - 계획/분석/설계 할 때 업무를 분석하고 설계하는데 이용

    - 구축/운영 단계에서는 변경과 관리의 목적으로 이용

## **다. 모델링의 세 가지 관점**

**1) 데이터관점** : 업무가 어떤 데이터와 관련이 있는지 또는 데이터간의 관계는 무엇인지에 대해서 모델링하는 방법(What, Data) 
**2) 프로세스관점** : 업무가 실제하고 있는 일은 무엇인지 또는 무엇을 해야 하는지를 모델링하는 방법(How, Process)
**3) 데이터와 프로세스의 상관관점** : 업무가 처리하는 일의 방법에 따라 데이터는 어떻게 영향을 받고 있는지 모델링하는 방법(Interaction)

# **2. 데이터 모델의 기본 개념의 이해**

## **가. 모델링의 정의**

- 정보시스템을 구축하기 위하 데이터 관점의 업무 분석 기법
- 현실세계의 데이터(what)에 대해 약속된 표기법에 의해 표현하는 과정
- 데이터베이스를 구축하기 위한 분석/설계의 과정

## **나. 데이터 모델이 제공하는 기능**

- 시스템을 현재 또는 원하는 모습으로 가시화하도록 도움
- 시스템의 구조와 행동을 명세화 할 수 있게 함
- 시스템을 구축하는 구조화된 틀을 제공
- 시스템을 구축하는 과정에서 결정한 것을 문서화
- 다양한 영역에 집중하기 위해 다른 영역의 세부 사항은 숨기는 다양한 관점을 제공
- 특정 목표에 따라 구체화된 상세 수준의 표현방법을 제공

# **3. 데이터 모델링의 중요성 및 유의점**

## **가. 파급효과(Leverage)**

병행테스트, 통합테스트를 수행 중 만약, 이러한 시점에 데이터 모델의 변경이 불가피한 상황이 발생 할 경우 ⇒ 변경을 해야 하는 데이터 모델의 형태에 따라서 그 영향 정도는 차이있지만 데이터 구조의 변경으로 인한 일련의 변경작업은 전체 시스템 구축 프로젝트에서 큰 위험요소

## **나. 복잡한 정보 요구사항의 간결한 표현(Conciseness)**

데이터 모델 : 구축할 시스템의 정보 요구사항과 한계를 가장 명확하고 간결하게 표현할 수 있는 도구

## **다. 데이터 품질(Data Quality)**

- DB의 데이터는 기업의 중요한 자산, 기간이 오래되면 될수록 활용가치는 훨씬 높아짐 

- But, 이러한 오래도록 저장되어진 데이터가 그저 그런 데이터, 정확성이 떨어지는 데이터? ⇒ 해당 데이터로 얻을 수 있었던 소중한 비즈니스의 기회를 상실할 수도 있는 문제

**데이터 모델링을 할 때 유의점**

1) 중복(Duplication) 데이터베이스가 여러 장소에 같은 정보를 저장하는 것을 유의   2) 비유연성(Inflexibility) 데이터 모델을 설계방법에 따라 사소한 업무변화에 데이터 모델이 수시로 변경됨으로써 유지보수의 어려움 가중 가능 ⇒ 해결 : 데이터의 정의를 데이터의 사용 프로세스와 분리   

3) 비일관성(Inconsistency) 데이터의 중복이 없어도 비일관성 발생 ⇒ 해결 : 데이터 모델링을 할 때 데이터와 데이터간 상호 연관 관계에 대한 명확한 정의는 사전에 예방 가능

# **4. 데이터 모델링의 3단계 진행**

- 시간에 따라 진행되는 과정
- 추상화 수준에 따라 개념적모델링, 논리적모델링, 물리적모델링으로 분류

아래 그림과 같이 시간에 따라 진행되는 과정으로서 추상화 수준에 따라 개념적 데이터 모델, 논리적 데이터 모델, 물리적 데이터 모델로 정리

# **5. 프로젝트 생명주기(Life Cycle)에서 데이터 모델링**

1. 일반적
    
    계획 / 분석단계 : 개념적 데이터 모델링
    
    분석단계 : 논리적 데이터 모델링
    
    설계단계 : 물리적 데이터 모델링
    
2. 현실 프로젝트
    
    분석단계 : 개념적 데이터 모델이 생략된 개념/논리 데이터 모델링이 수행
    
3. ㅍWaterFall 모델
    
    분석단계 : 논리적 데이터 모델링
    
    설계단계 : 물리적 데이터 모델링
    
4. 객체지향에
    
    데이터와 프로세스를 구분하지 않고 한꺼번에 바라보며 모델링 전개
    
    데이터(속성) + 프로세스(Method)가 같이 있는 클래스(Class)
    

# **6. 데이터 모델링에서 데이터독립성의 이해**

## **가. 데이터 독립성의 필요성**

- 데이터 종속성을 제거하여 상호간 영향에서 벗어나 자신의 고유한 기능을 제공해야함
    - 데이터 종속성
        
        : 데이터베이스와 응용 애플리케이션 간의 종속성을 의미
        
        : 사용자가 접근하는 유형에 따라 데이터를 구성하는 방법이 영향을 받음
        
- 유지보수 비용 절감
- 데이터 복잡도를 낮춤
- 중복된 데이터를 줄임
- 끊임없이 변하는 사용자 요구사항에 대해 화면과 데이터베이스 간에 독립성을 유지하기 위한 목적

**데이터 독립성의 효과**

- 각 View의 독립성을 유지하고 계층별 View에 영향을 주지 않고 변경이 가능하다.
- 단계별 Schema에 따라 데이터 정의어(DDL)와 데이터 조작어(DML)가 다름을 제공한다.

## **나. 데이터베이스 3단계 구조**

ANSI/SPARC의 3단계 구성의 데이터 독립성 모델 : **외부단계, 개념적 단계, 내부적 단계**로 서로 간섭되지 않는 모델을 제시

- 외부단계
    
    : 사용자와 가까운 단계
    
    : 사용자 개개인이 보는 자료에 대한 관점
    
    : 사용자가 처리하고자하는 데이터 유형, 관점, 방법에 따라 다른 스키마 구조를 가짐
    
- 개념적 단계
    
    : 사용자가 처리하는 데이터 유형의 공통적인 사항을 처리하는 통합된 뷰를 스키마 구조로 나타냄
    
- 내부적 단계
    
    : 데이터가 물리적으로 저장된 방법에 대한 스키마 구조
        

## **다. 데이터독립성 요소**

데이터베이스 스키마 구조

- 3단계로 구분, 각각은 상호 독립적인 의미와 고유한 기능 소유

※ 참고 : 데이터 모델링은 통합관점의 뷰를 가지고 있는 개념 스키마를 만들어가는 과정

## **라. 두 영역의 데이터 독립성**

논리적인 독립성 &물리적인 독립성 : 3단계로 개념의 각 영역에 대한 독립성을 지정하는 용어
논리적인 데이터독립성 : 외부의 변경에도 개념스키마가 변하지 않는 특징

## **마. 사상(Mapping)**

영어로 ‘Mapping’은 우리말로 ‘사상’이라고 번역되는데 이것은 상호 독립적인 개념을 연결시켜주는 다리를 뜻함

데이터독립성에는 크게 2가지의 사상 도출

- 데이터의 독립성을 보장하기 위해 사상하는 스크립트(DDL)를 DBA가 필요에
    
    따라 변경해줘야함
    
- 각 단계의 독립성을 보장하기 위해서 변경사항이 발생했을 때 DBA가 적절하게
    
    작업을 해주기 때문에 독립성이 보장됨
    

논리적 사상 : 외부 화면이나 사용자에게 인터페이스하기 위한 스키마 구조는 전체가 통합된 개념적 스키마와 연결된다는 것

물리적 사상 : 통합된 개념적 스키마 구조와 물리적으로 저장된 구조의 물리적인 테이블스페이스와 연결되는 구조

# **7. 데이터 모델링의 중요한 세 가지 개념**

## **가. 데이터 모델링의 세 가지 요소**

**데이터 모델링을 구성하는 중요한 개념 세 가지**   

**1) 업무가 관여하는 어떤 것(Things) → 엔티티(Entity)**

**2) 어떤 것이 가지는 성격(Attributes) → 속성(Attribute)**

**3) 업무가 관여하는 어떤 것 간의 관계(Relationships) → 관계(Relationship)**

⇒ 이 세가지 관점의 접근 방법을 통해 모델링을 진행

## **나. 단수와 집합(복수)의 명명**

- 어떤 것 : 실제 실무 현장에서는 복수/집합개념도 엔터티로 짧게 명명
 엔터티를 집합개념으로 사용하는 경우, 개별요소에 대해서는 인스턴스/어커런스를 단수의 개념으로 사용
- 관계(Relationship) : 일반적으로 단수든 복수든 대부분 관계라고 표현
- 성격(Attribute) : 속성과 속성값으로 구분
    
    ※ 교재에서의 용어 구분 사용 ☞ Thing : 복수 - 엔터티, 단수 - 인스턴스 라 표기
    

# **8. 데이터 모델링의 이해관계자**

## **가. 이해관계자의 데이터 모델링 중요성 인식**

     - 실질적으로 DBA보다 업무시스템을 개발하는 응용시스템 개발자가 데이터 모델링도 같이하는 경우가 많음

## **나. 데이터 모델링의 이해관계자**

- DBA
- 프로젝트 개발자, System Engineer
- 현업업무전문가 : 이해할 수 있는 수준정도만 되면됨
- 전문 모델러

☞ 실무에서는 DBA가 데이터 모델링을 한다기 보다는 개발팀에서 모델링을 진행함

# **9. 데이터 모델의 표기법인 ERD의 이해**

## **가. 데이터 모델 표기법**

1976년 피터첸(Peter Chen)이 Entity-relationship model(E-R Model)이라는 표기법
※ 교재의 표기법데이터아키텍처 전문가(DAP) 관련 자격에서는 바커(Barker) 표기법을 적용하여 설명본 가이드에서는 범용적인 Information Engineering(이하 IE) 표기법과 바커 표기법 모두 적용

## **나. ERD(Entity Relationship Diagram) 표기법을 이용하여 모델링하는 방법**

- **ERD 란?**
    
    : 엔티티간의 관계를 이해하기 쉽게 도식화된 다이어그램으로 표시하는 방법
    
    : 해당업무의 데이터 흐름과 프로세스의 연관성을 이야기하는데 가장 중요한 표기법이자 산출물
    

1) 엔티티를 그린다

- Primary key와 Foreign key를 ERD 규칙에 따라 기술
- 엔티티는 사각형으로 표기하여 기술

2) 엔티티 배치

- 일반적으로 사람의 시선의 위치에 다라 왼쪽에서 오른쪽으로 배치
- 가장중요한 엔티티를 왼쪽상단에 배치하고, 이것을 중심으로 다른 엔티티를 배치
- 업무의 흐름에 있어 중심이 되는 엔티티는 중앙에 배치하여 전체 엔티티와 어울릴 수 있도록함

3) ERD 관계의 연결

- 중복되는 관계가 없도록 관계를 연결
- Circle 관계도 발생하지 않도록 유의하여 작성

4) ERD 관계명의 표시

- 관계이름은 현재형을 사용하며, 지나치게 포괄적인 용어(예, 이다, 가진다 등)은 사용하지 않는다
- 실제프로제트에서는 관계의 명칭을 크게 고려하지 않아도 무방 (엔티티의 성질과 주식별자를 보고 유추가 가능하므로)

5) ERD 관계 관계차수와 선택성 표시

- 엔티티 내에 인스턴스들이 얼마나 관계에 참여하는지를 나타내는 관계차수(Cardinality)를 표시
- 1:1, 1: M, M:N
- 관계 참여가 선택적인지 필수적인지 O를 통해 표시

# **10. 좋은 데이터 모델의 요소**

- **완전성(Completeness)**
    
    업무에 필요한 모든 데이터가 데이터 모델에 정의되어 있어야함
    
- **중복배제(Non-Redundancy)**
    
    하나의 데이터베이스에 동일한 사실은 한번만 기록해야함 (한 테이블에 나이칼럼과 생년월일 칼럼이 동시에 존재)
    
    중복으로 인해 데이터 관리 비용을 지불 (저장공간의 낭비, 데이터의 일관성 유지를 위한 추가적인 데이터 조작)
    
- **업무규칙(Business Rules)**
    
    데이터 모델링 과정에서 도출되고 규명되는 수많은 업무규칙을 데이터 모델에 표현하고 이를 해당 데이터 모델을 활용하는 모든 사용자가 공유할 수 있도록 함
    
    데이터 모델을 보고 이를 사용하는 사람들이 해당 규칙에 대해 동일하게판단하고 데이터를 조작하도록 해야함
    
- **데이터 재사용(Data Reusability)**
    
    데이터의 재사용성을 향상시키위해 데이터의 통합성과 독립성에 대해 고려
    
    데이터 구조의 확장성, 유연성에 많이 노력을 진행해야함 (업무환경 변화에 능동적으로 대처할 수 있어야 한다)
    
    ⇒  간결한 모델로 통합
    
    ex ) ㄱ 회사는 10개의 테이블
    
           ㄴ 회사는 100개의 테이블
    
          ⇒ ㄴ 회사는 데이터 모델의 한계로 인해 테이블 수가 지속적으로 증가됨
             (동일한 형태로관리되어야 하는 데이터가 복잡한 형태의 관계로 관리되고 있어 업무변화에 영향을 많이 받음)
    
- **의사소통(Communication)**
    
    많은 업무 규칙들은 데이터 모델에 엔티티, 서브타입, 속성, 관계 등의 형태로 최대한 자세하게 표현되어야 함
    
- **통합성(Integration)**
    
    동일한 형태의 데이터는 조직 전체에서 한번만 정의되고 이를 여러 다른 영역에서 참조하여 활용할 수 있도록 함